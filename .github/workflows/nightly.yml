name: Nightly Canary Release

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: write
  actions: write

jobs:
  check-for-changes:
    name: Check for changes since last canary
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
      last_canary_tag: ${{ steps.check.outputs.last_canary_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        id: check
        run: |
          # Get the latest canary tag
          LAST_CANARY_TAG=$(git tag -l "*-canary.*" --sort=-version:refname | head -1)
          
          if [ -z "$LAST_CANARY_TAG" ]; then
            echo "No previous canary tag found, will create release"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "last_canary_tag=none" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "last_canary_tag=$LAST_CANARY_TAG" >> $GITHUB_OUTPUT
          
          # Check if there are commits since the last canary tag
          COMMITS_SINCE=$(git rev-list ${LAST_CANARY_TAG}..HEAD --count)
          
          if [ "$COMMITS_SINCE" -gt 0 ]; then
            echo "Found $COMMITS_SINCE commits since $LAST_CANARY_TAG"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes since $LAST_CANARY_TAG"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  check-manifest-status:
    name: Check if manifest needs update or new build needed
    needs: check-for-changes
    if: needs.check-for-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    outputs:
      needs_build: ${{ steps.check.outputs.needs_build }}
      latest_release_tag: ${{ steps.check.outputs.latest_release_tag }}
      manifest_version: ${{ steps.check.outputs.manifest_version }}
    steps:
      - name: Check manifest vs latest release
        id: check
        uses: actions/github-script@v7
        env:
          RELEASES_REPO_TOKEN: ${{ secrets.RELEASES_REPO_TOKEN }}
        with:
          github-token: ${{ secrets.RELEASES_REPO_TOKEN }}
          script: |
            // Decision Logic for Nightly Canary Release
            //
            // This job determines whether we need to build a new release or just update the manifest.
            //
            // Scenarios:
            //
            // Scenario A: Manifest is outdated
            //   - Latest release: 0.1.1-canary.20251021120000
            //   - latest.json version: 0.1.1-canary.20251020120000
            //   - Action: Skip build, go directly to updating manifest (needs_build = false)
            //   - Reason: A release was built but manifest wasn't updated yet
            //
            // Scenario B: Manifest is up-to-date
            //   - Latest release: 0.1.1-canary.20251021120000
            //   - latest.json version: 0.1.1-canary.20251021120000
            //   - Action: Build new release since there are new commits (needs_build = true)
            //   - Reason: Manifest already points to latest release, need new build for new commits
            //
            // Scenario C: No release exists
            //   - No canary releases found
            //   - Action: Build new release (needs_build = true)
            //   - Reason: This is the first canary release
            //
            // Scenario D: Release incomplete
            //   - Latest release exists but missing assets (DMGs, updaters, or signatures)
            //   - Action: Build new release (needs_build = true)
            //   - Reason: Previous build failed or didn't complete, need to rebuild

            const owner = 'robert-agent';
            const repo = 'robert-releases-canary';

            try {
              // Get the latest canary release
              const { data: releases } = await github.rest.repos.listReleases({
                owner,
                repo,
                per_page: 5
              });

              const canaryRelease = releases.find(r => r.tag_name.includes('-canary.'));

              if (!canaryRelease) {
                // Scenario C: No release exists
                console.log('No existing canary release found - needs build');
                core.setOutput('needs_build', 'true');
                core.setOutput('latest_release_tag', 'none');
                core.setOutput('manifest_version', 'none');
                return;
              }

              console.log(`Latest canary release: ${canaryRelease.tag_name}`);

              // Check if release has all required assets
              const assets = canaryRelease.assets;
              const hasDmgs = assets.filter(a => a.name.endsWith('.dmg')).length >= 2;
              const hasUpdaters = assets.filter(a => a.name.includes('updater.app.tar.gz') && !a.name.endsWith('.sig')).length >= 2;
              const hasSigs = assets.filter(a => a.name.endsWith('.app.tar.gz.sig')).length >= 2;

              if (!hasDmgs || !hasUpdaters || !hasSigs) {
                // Scenario D: Release incomplete
                console.log('⚠️ Latest release is missing assets - needs rebuild');
                core.setOutput('needs_build', 'true');
                core.setOutput('latest_release_tag', canaryRelease.tag_name);
                core.setOutput('manifest_version', 'incomplete');
                return;
              }

              console.log(`✅ Latest release has all assets: ${canaryRelease.tag_name}`);
              core.setOutput('latest_release_tag', canaryRelease.tag_name);

              // Now check latest.json to see if it points to this release
              try {
                const { data: manifestFile } = await github.rest.repos.getContent({
                  owner,
                  repo,
                  path: 'latest.json',
                  ref: 'main'
                });

                const manifestContent = Buffer.from(manifestFile.content, 'base64').toString('utf-8');
                const manifest = JSON.parse(manifestContent);

                console.log(`Manifest version: ${manifest.version}`);
                console.log(`Latest release: ${canaryRelease.tag_name}`);

                core.setOutput('manifest_version', manifest.version);

                if (manifest.version === canaryRelease.tag_name) {
                  // Scenario B: Manifest is up-to-date
                  console.log('✅ Manifest is up-to-date with latest release - needs NEW build');
                  core.setOutput('needs_build', 'true');
                } else {
                  // Scenario A: Manifest is outdated
                  console.log('⚠️ Manifest is outdated - only needs manifest update, skip build');
                  core.setOutput('needs_build', 'false');
                }
              } catch (manifestError) {
                console.log(`Error reading manifest: ${manifestError.message}`);
                console.log('Manifest not found or error - needs build');
                core.setOutput('needs_build', 'true');
                core.setOutput('manifest_version', 'error');
              }
            } catch (error) {
              console.log(`Error checking releases: ${error.message}`);
              core.setOutput('needs_build', 'true');
              core.setOutput('latest_release_tag', 'error');
              core.setOutput('manifest_version', 'error');
            }

  trigger-canary-release:
    name: Trigger canary release
    needs: check-manifest-status
    if: needs.check-manifest-status.outputs.needs_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger release workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Triggering canary release workflow...');
            console.log('Note: Release workflow will automatically trigger manifest update when complete');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yml',
              ref: 'main',
              inputs: {
                release_type: 'canary'
              }
            });
            console.log('✅ Release workflow triggered');

  trigger-update-manifest:
    name: Trigger update manifest
    needs: check-manifest-status
    if: needs.check-manifest-status.outputs.needs_build == 'false' && needs.check-manifest-status.outputs.latest_release_tag != 'none'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger update-manifest workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Triggering update-manifest workflow...');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'update-manifest.yml',
              ref: 'main',
              inputs: {
                release_type: 'canary'
              }
            });
            console.log('✅ Update-manifest workflow triggered');
            console.log('Note: Update-manifest workflow will handle PR creation and auto-merge');
