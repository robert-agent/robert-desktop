name: TypeScript Quality

on:
  push:
    branches: [main]
    paths:
      - 'crates/robert-app/**/*.ts'
      - 'crates/robert-app/**/*.svelte'
      - 'crates/robert-app/**/*.js'
      - 'crates/robert-app/package.json'
      - 'crates/robert-app/bun.lock'
      - 'crates/robert-app/tsconfig.json'
      - 'crates/robert-app/eslint.config.js'
      - 'crates/robert-app/.prettierrc.json'
      - '.github/workflows/ts-quality.yml'
  pull_request:
    branches: [main]
    paths:
      - 'crates/robert-app/**/*.ts'
      - 'crates/robert-app/**/*.svelte'
      - 'crates/robert-app/**/*.js'
      - 'crates/robert-app/package.json'
      - 'crates/robert-app/bun.lock'
      - 'crates/robert-app/tsconfig.json'
      - 'crates/robert-app/eslint.config.js'
      - 'crates/robert-app/.prettierrc.json'
      - '.github/workflows/ts-quality.yml'
  schedule:
    - cron: '17 2 * * *'  # Run nightly at 2:17 AM UTC

jobs:
  typescript-check:
    name: TypeScript Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crates/robert-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check TypeScript types
        run: bun run check

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crates/robert-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run ESLint
        run: bun run lint

  format:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crates/robert-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check formatting
        run: bun run format

  build:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: crates/robert-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build frontend
        run: bun run frontend:build

