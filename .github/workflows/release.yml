name: Release

on:
  push:
    tags:
      - '*'
    branches:
      - 'canary-*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  IS_CANARY: ${{ github.ref_type == 'branch' && startsWith(github.ref_name, 'canary-') }}

permissions:
  contents: write

jobs:
  get-version:
    name: Get Version Info
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag }}
      commit_hash: ${{ steps.get_commit.outputs.short_hash }}
      version_with_hash: ${{ steps.get_commit.outputs.version_with_hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tauri.conf.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' crates/robert-app/src-tauri/tauri.conf.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Get tag name
        id: get_tag
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if [ "${{ env.IS_CANARY }}" = "true" ]; then
            echo "tag=${VERSION}-canary" >> $GITHUB_OUTPUT
          else
            echo "tag=${VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Get commit hash
        id: get_commit
        run: |
          SHORT_HASH=$(git rev-parse --short=7 HEAD)
          echo "short_hash=$SHORT_HASH" >> $GITHUB_OUTPUT
          echo "version_with_hash=${{ steps.get_tag.outputs.tag }}-$SHORT_HASH" >> $GITHUB_OUTPUT

  build-and-release:
    name: Build and Release
    needs: get-version
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
          - platform: macos-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates/robert-app/src-tauri

      - name: Install frontend dependencies
        working-directory: crates/robert-app
        run: bun install

      - name: Build and release with Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_REPO_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          owner: lucky-tensor
          repo: robert-releases
          releaseCommitish: ${{ github.sha }}
          tagName: ${{ needs.get-version.outputs.tag_name }}
          releaseName: Robert ${{ needs.get-version.outputs.tag_name }}
          releaseBody: |
            ## Robert Browser Automation - Release ${{ needs.get-version.outputs.tag_name }}

            **Version:** ${{ needs.get-version.outputs.version_with_hash }}
            **Commit:** `${{ needs.get-version.outputs.commit_hash }}`

            ### Installation
            1. Download the appropriate DMG file for your system
            2. Open the DMG and drag Robert to your Applications folder
            3. Launch Robert from Applications

            ### Changes
            <!-- Add release notes here -->
          releaseDraft: false
          prerelease: ${{ env.IS_CANARY == 'true' }}
          includeUpdaterJson: false
          args: --target ${{ matrix.target }}
          projectPath: crates/robert-app
